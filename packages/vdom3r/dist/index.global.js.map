{"version":3,"sources":["../src/index.ts","../src/types/dom.ts","../src/lib/render.ts","../src/jsx-runtime/index.ts"],"sourcesContent":["export * from \"./jsx-runtime\";\nexport * from \"./lib/render\";\n","export const Fragment = Symbol(\"Fragment\");\n// Dom Event Handler Type\nexport type DOMEventHandler<K extends keyof HTMLElementEventMap> = (\n    event: HTMLElementEventMap[K],\n) => void;\n// Style type that can be string or class\nexport type StyleValue = string | Partial<CSSStyleDeclaration> | null;\n\n// Class type that can be string object or array\nexport type ClassValue =\n    | string\n    | Record<string, boolean>\n    | (string | Record<string, boolean>)[]\n    | null;\n\n// Ref type\nexport type RefCallback<T> = (el: T | null) => void;\nexport type RefObject<T> = { value: T | null };\nexport type Ref<T = any> = RefCallback<T> | RefObject<T> | string;\n\n// Props for HTML elements\nexport type HTMLProps<T extends keyof HTMLElementTagNameMap> = Partial<{\n    // DOM properties and attributes\n    [K in keyof HTMLElementTagNameMap[T]]: HTMLElementTagNameMap[T][K];\n}>;\n\n// EmitsOptions for better type safety in events\nexport type EmitsOptions = Record<string, ((...args: any[]) => any) | null>;\n\n// Context type with proper event emitter\nexport interface ComponentContext<E extends EmitsOptions = {}> {\n    emit: E extends Record<infer K, any>\n        ? (event: K, ...args: any[]) => void\n        : (event: string, ...args: any[]) => void;\n}\n\n// Functional component with proper typing\nexport type FunctionComponent<\n    P extends VNodeProps = VNodeProps,\n    E extends EmitsOptions = {},\n> = (props: P, context: ComponentContext<E>) => VNode | null | undefined;\n\n// Event handle type\nexport type EventHandlers = {\n    [K in keyof HTMLElementEventMap as `on${Capitalize<K>}`]?: DOMEventHandler<K>;\n};\n\nexport type VNodeTypes =\n    | keyof HTMLElementTagNameMap\n    | FunctionComponent\n    | typeof Fragment;\n\nexport type VNodeChild =\n    | VNode\n    | string\n    | number\n    | boolean\n    | null\n    | undefined\n    | FunctionComponent\n    | VNodeChild[]\n    | typeof Fragment;\n\nexport interface VNodeProps extends EventHandlers, Record<string, unknown> {\n    className?: string;\n    style?: StyleValue;\n    class?: ClassValue;\n    key?: string | number;\n    ref?: Ref;\n    children?: VNodeChild | VNodeChild[]; // Include children in props\n}\n\nexport interface VNode<P extends VNodeProps = VNodeProps> {\n    type: VNodeTypes;\n    props: P;\n    children: VNodeChild[];\n    el?: Node | null;\n    key?: string | number | null | undefined;\n}\n","import {\n    FunctionComponent,\n    VNode,\n    VNodeChild,\n    VNodeProps,\n    VNodeTypes,\n    Fragment,\n} from \"src/types/dom\";\n\n// Helper function to normalize children\nfunction normalizeChildren(children: VNodeChild[]): VNodeChild[] {\n    return children.reduce<VNodeChild[]>((acc, child) => {\n        if (child === null || child === undefined || child === false) {\n            return acc;\n        }\n\n        if (Array.isArray(child)) {\n            acc.push(...normalizeChildren(child));\n        } else if (typeof child === \"number\" || typeof child === \"boolean\") {\n            acc.push(String(child));\n        } else {\n            acc.push(child);\n        }\n\n        return acc;\n    }, []);\n}\nexport function createElement(type: VNodeTypes, props: VNodeProps): VNode {\n    // Handle null or undefined props\n    const normalizedProps = props || {};\n\n    // Extract special props\n    const {\n        key = null,\n        ref = null,\n        children: propsChildren,\n        ...restProps\n    } = normalizedProps;\n\n    // Normalizing children to always be an array\n    const normalizedChildren = normalizeChildren(\n        propsChildren\n            ? Array.isArray(propsChildren)\n                ? propsChildren\n                : [propsChildren]\n            : [],\n    );\n    return {\n        type,\n        props: { ...restProps, ref: ref || undefined },\n        children: normalizedChildren,\n        key,\n        el: null,\n    };\n}\n\nfunction isVNode(node: unknown): node is VNode {\n    return (\n        node !== null &&\n        typeof node === \"object\" &&\n        \"type\" in node &&\n        \"props\" in node &&\n        \"children\" in node\n    );\n}\n\nexport function isFunctionComponent(\n    value: unknown,\n): value is FunctionComponent {\n    return (\n        typeof value === \"function\" &&\n        (!(\"prototype\" in value) || !value.prototype?.render)\n    );\n}\n\nexport function render(vnode: VNodeChild, container: HTMLElement): void {\n    if (vnode == null) return;\n\n    // Handle primitive values\n    if (\n        typeof vnode === \"string\" ||\n        typeof vnode === \"number\" ||\n        typeof vnode === \"boolean\"\n    ) {\n        container.appendChild(document.createTextNode(String(vnode)));\n        return;\n    }\n\n    // Handle arrays\n    if (Array.isArray(vnode)) {\n        vnode.forEach((child) => render(child, container));\n        return;\n    }\n\n    // Handle VNode\n    if (!isVNode(vnode)) return;\n\n    // Handle function components\n    if (typeof vnode.type === \"function\") {\n        const Component = vnode.type as FunctionComponent;\n        const result = Component(vnode.props, { emit() {} });\n        if (result) render(result, container);\n        return;\n    }\n\n    // Handle Fragment\n    if (vnode.type === Fragment) {\n        vnode.children.forEach((child) => render(child, container));\n        return;\n    }\n\n    // Create element (only for string types now)\n    if (typeof vnode.type === \"string\") {\n        const element = document.createElement(vnode.type);\n\n        // Apply props\n        if (vnode.props) {\n            Object.entries(vnode.props).forEach(([key, value]) => {\n                // Handle ref\n                if (key === \"ref\" && typeof value === \"function\") {\n                    value(element);\n                    return;\n                }\n\n                // Handle event listeners\n                if (key.startsWith(\"on\") && typeof value === \"function\") {\n                    const eventType = key\n                        .slice(2)\n                        .toLowerCase() as keyof HTMLElementEventMap;\n                    element.addEventListener(eventType, value as EventListener);\n                    return;\n                }\n\n                // Handle style object\n                if (key === \"style\" && value && typeof value === \"object\") {\n                    Object.assign(element.style, value);\n                    return;\n                }\n\n                // Handle className\n                if (key === \"className\" && typeof value === \"string\") {\n                    element.className = value;\n                    return;\n                }\n\n                // Handle regular attributes\n                if (\n                    typeof value !== \"function\" &&\n                    typeof value !== \"object\" &&\n                    key !== \"key\"\n                ) {\n                    element.setAttribute(key, String(value));\n                }\n            });\n        }\n\n        // Render children\n        vnode.children.forEach((child) => render(child, element));\n        container.appendChild(element);\n    }\n}\n","import { Fragment } from \"src/types/dom\";\nimport { createElement } from \"../lib/render\";\nexport const jsx = createElement;\nexport const jsxs = jsx;\nexport const jsxDev = jsx;\nexport { Fragment };\n"],"mappings":"0bAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,cAAAE,EAAA,kBAAAC,EAAA,wBAAAC,EAAA,QAAAC,EAAA,WAAAC,EAAA,SAAAC,EAAA,WAAAC,ICAO,IAAMC,EAAW,OAAO,UAAU,ECUzC,SAASC,EAAkBC,EAAsC,CAC7D,OAAOA,EAAS,OAAqB,CAACC,EAAKC,KACnCA,GAAU,MAA+BA,IAAU,KAInD,MAAM,QAAQA,CAAK,EACnBD,EAAI,KAAK,GAAGF,EAAkBG,CAAK,CAAC,EAC7B,OAAOA,GAAU,UAAY,OAAOA,GAAU,UACrDD,EAAI,KAAK,OAAOC,CAAK,CAAC,EAEtBD,EAAI,KAAKC,CAAK,GAGXD,GACR,CAAC,CAAC,CACT,CACO,SAASE,EAAcC,EAAkBC,EAA0B,CAEtE,IAAMC,EAAkBD,GAAS,CAAC,EAG5B,CACF,IAAAE,EAAM,KACN,IAAAC,EAAM,KACN,SAAUC,EACV,GAAGC,CACP,EAAIJ,EAGEK,EAAqBZ,EACvBU,EACM,MAAM,QAAQA,CAAa,EACvBA,EACA,CAACA,CAAa,EAClB,CAAC,CACX,EACA,MAAO,CACH,KAAAL,EACA,MAAO,CAAE,GAAGM,EAAW,IAAKF,GAAO,MAAU,EAC7C,SAAUG,EACV,IAAAJ,EACA,GAAI,IACR,CACJ,CAEA,SAASK,EAAQC,EAA8B,CAC3C,OACIA,IAAS,MACT,OAAOA,GAAS,UAChB,SAAUA,GACV,UAAWA,GACX,aAAcA,CAEtB,CAEO,SAASC,EACZC,EAC0B,CAC1B,OACI,OAAOA,GAAU,aAChB,EAAE,cAAeA,IAAU,CAACA,EAAM,WAAW,OAEtD,CAEO,SAASC,EAAOC,EAAmBC,EAA8B,CACpE,GAAID,GAAS,KAGb,IACI,OAAOA,GAAU,UACjB,OAAOA,GAAU,UACjB,OAAOA,GAAU,UACnB,CACEC,EAAU,YAAY,SAAS,eAAe,OAAOD,CAAK,CAAC,CAAC,EAC5D,MACJ,CAGA,GAAI,MAAM,QAAQA,CAAK,EAAG,CACtBA,EAAM,QAASf,GAAUc,EAAOd,EAAOgB,CAAS,CAAC,EACjD,MACJ,CAGA,GAAKN,EAAQK,CAAK,EAGlB,IAAI,OAAOA,EAAM,MAAS,WAAY,CAClC,IAAME,EAAYF,EAAM,KAClBG,EAASD,EAAUF,EAAM,MAAO,CAAE,MAAO,CAAC,CAAE,CAAC,EAC/CG,GAAQJ,EAAOI,EAAQF,CAAS,EACpC,MACJ,CAGA,GAAID,EAAM,OAASI,EAAU,CACzBJ,EAAM,SAAS,QAASf,GAAUc,EAAOd,EAAOgB,CAAS,CAAC,EAC1D,MACJ,CAGA,GAAI,OAAOD,EAAM,MAAS,SAAU,CAChC,IAAMK,EAAU,SAAS,cAAcL,EAAM,IAAI,EAG7CA,EAAM,OACN,OAAO,QAAQA,EAAM,KAAK,EAAE,QAAQ,CAAC,CAACV,EAAKQ,CAAK,IAAM,CAElD,GAAIR,IAAQ,OAAS,OAAOQ,GAAU,WAAY,CAC9CA,EAAMO,CAAO,EACb,MACJ,CAGA,GAAIf,EAAI,WAAW,IAAI,GAAK,OAAOQ,GAAU,WAAY,CACrD,IAAMQ,EAAYhB,EACb,MAAM,CAAC,EACP,YAAY,EACjBe,EAAQ,iBAAiBC,EAAWR,CAAsB,EAC1D,MACJ,CAGA,GAAIR,IAAQ,SAAWQ,GAAS,OAAOA,GAAU,SAAU,CACvD,OAAO,OAAOO,EAAQ,MAAOP,CAAK,EAClC,MACJ,CAGA,GAAIR,IAAQ,aAAe,OAAOQ,GAAU,SAAU,CAClDO,EAAQ,UAAYP,EACpB,MACJ,CAII,OAAOA,GAAU,YACjB,OAAOA,GAAU,UACjBR,IAAQ,OAERe,EAAQ,aAAaf,EAAK,OAAOQ,CAAK,CAAC,CAE/C,CAAC,EAILE,EAAM,SAAS,QAASf,GAAUc,EAAOd,EAAOoB,CAAO,CAAC,EACxDJ,EAAU,YAAYI,CAAO,CACjC,GACJ,CC9JO,IAAME,EAAMC,EACNC,EAAOF,EACPG,EAASH","names":["src_exports","__export","Fragment","createElement","isFunctionComponent","jsx","jsxDev","jsxs","render","Fragment","normalizeChildren","children","acc","child","createElement","type","props","normalizedProps","key","ref","propsChildren","restProps","normalizedChildren","isVNode","node","isFunctionComponent","value","render","vnode","container","Component","result","Fragment","element","eventType","jsx","createElement","jsxs","jsxDev"]}